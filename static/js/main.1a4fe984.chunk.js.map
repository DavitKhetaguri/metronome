{"version":3,"sources":["metronome.svg","metronomeFront.svg","index.js"],"names":["angle","timeinterval","timeout","Metronome","props","beatUpReal","x","state","playStop","clearInterval","clearTimeout","document","getElementById","value","interval","setState","bpm","setTimeout","rectStyle","bottom","rotate","beatUp","a","b","c","d","aa","bb","cc","dd","handlePlay","changeBeat","setInterval","ang","t","style","transform","transition","currentTime","play","bind","id","onClick","this","src","MetronomeLogo","alt","MetronomeLogoFront","type","min","max","onChange","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.1a4fe984.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/metronome.817984cf.svg\";","export default __webpack_public_path__ + \"static/media/metronomeFront.4e62d4ce.svg\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport MetronomeLogo from \"./metronome.svg\";\nimport MetronomeLogoFront from \"./metronomeFront.svg\";\n\nlet angle = 31;\n\nlet timeinterval = \"\";\nlet timeout = \"\";\n\nconst myStyle = (ang, t) => {\n  const rot = \"rotate(\" + ang + \"deg)\";\n\n  return {\n    transform: rot,\n    transition: \"transform \" + t / 1000 + \"s cubic-bezier(.42,0,.58,1)\",\n  };\n};\n\nclass Metronome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {},\n      interval: 1200,\n      playStop: false,\n      rectStyle: {},\n      bpm: \"50\",\n    };\n    this.rotate = this.rotate.bind(this);\n    this.changeBeat = this.changeBeat.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.beatUp = this.beatUp.bind(this);\n    this.beatUpReal = this.beatUpReal.bind(this);\n  }\n\n  beatUpReal = (x) => {\n    if (this.state.playStop) {\n      clearInterval(timeinterval);\n      clearTimeout(timeout);\n      document.getElementById(\"myRange\").value =\n        (1000 * 60) / this.state.interval + x;\n      this.setState({ bpm: document.getElementById(\"myRange\").value });\n\n      timeout = setTimeout(() => {\n        this.setState({\n          interval: (1000 * 60) / ((1000 * 60) / this.state.interval + x),\n          rectStyle: {\n            bottom:\n              275 -\n              ((document.getElementById(\"myRange\").value - 30) / 220) * 250 +\n              \"px\",\n          },\n        });\n        this.rotate();\n      }, 30);\n    } else {\n      clearInterval(timeinterval);\n      clearTimeout(timeout);\n      document.getElementById(\"myRange\").value =\n        (1000 * 60) / this.state.interval + x;\n      this.setState({\n        interval: (1000 * 60) / ((1000 * 60) / this.state.interval + x),\n        rectStyle: {\n          bottom:\n            275 -\n            ((document.getElementById(\"myRange\").value - 30) / 220) * 250 +\n            \"px\",\n        },\n        bpm: document.getElementById(\"myRange\").value,\n      });\n    }\n  };\n\n  beatUp = (x) => {\n    let a = x === 1;\n    let b = x === -1;\n    let c = this.state.bpm <= 249;\n    let d = this.state.bpm >= 31;\n    if (((a || b) && c && d) || (a && c) || (b && d)) {\n      this.beatUpReal(x);\n    }\n    let aa = x === 5;\n    let bb = x === -5;\n    let cc = this.state.bpm <= 245;\n    let dd = this.state.bpm >= 35;\n\n    if (((aa || bb) && cc && dd) || (aa && cc) || (bb && dd)) {\n      this.beatUpReal(x);\n    }\n  };\n\n  handlePlay = () => {\n    if (!this.state.playStop) {\n      this.rotate();\n      this.setState({ playStop: true });\n    } else {\n      clearInterval(timeinterval);\n      this.setState({ playStop: false });\n    }\n  };\n\n  changeBeat = () => {\n    if (this.state.playStop) {\n      clearInterval(timeinterval);\n      clearTimeout(timeout);\n      this.setState({ bpm: document.getElementById(\"myRange\").value });\n\n      timeout = setTimeout(() => {\n        this.setState({\n          interval: (1000 * 60) / document.getElementById(\"myRange\").value,\n          rectStyle: {\n            bottom:\n              275 -\n              ((document.getElementById(\"myRange\").value - 30) / 220) * 250 +\n              \"px\",\n          },\n        });\n        this.rotate();\n      }, 30);\n    } else {\n      clearInterval(timeinterval);\n      clearTimeout(timeout);\n      this.setState({\n        interval: (1000 * 60) / document.getElementById(\"myRange\").value,\n        rectStyle: {\n          bottom:\n            275 -\n            ((document.getElementById(\"myRange\").value - 30) / 220) * 250 +\n            \"px\",\n        },\n        bpm: document.getElementById(\"myRange\").value,\n      });\n    }\n  };\n\n  rotate = () => {\n    timeinterval = setInterval(() => {\n      if (this.state.playStop) {\n        this.setState({\n          style: myStyle(angle, this.state.interval),\n        });\n        angle = -angle;\n        document.getElementById(\"click\").currentTime = 0;\n        document.getElementById(\"click\").play();\n      }\n    }, this.state.interval);\n  };\n\n  render() {\n    return (\n      <div id=\"container\">\n        <div id=\"metronome\" onClick={this.handlePlay}>\n          <div id=\"stick-rect\" style={this.state.style}>\n            <div id=\"stick\"></div>\n\n            <div id=\"rect\" style={this.state.rectStyle}>\n              <div id=\"rectEnd\"></div>\n            </div>\n          </div>\n\n          <img src={MetronomeLogo} alt=\"Metronome\" id=\"metronomeBack\" />\n          <img src={MetronomeLogoFront} alt=\"Metronome\" id=\"metronomeFront\" />\n        </div>\n\n        <div id=\"controls\">\n          <div\n            id=\"high\"\n            onClick={() => {\n              this.beatUp(-5);\n            }}\n          >\n            -5\n          </div>\n          <div\n            id=\"low\"\n            onClick={() => {\n              this.beatUp(-1);\n            }}\n          >\n            -1\n          </div>\n          <input\n            type=\"range\"\n            min=\"30\"\n            max=\"250\"\n            id=\"myRange\"\n            onChange={this.changeBeat}\n          />\n          <div\n            id=\"highfive\"\n            onClick={() => {\n              this.beatUp(1);\n            }}\n          >\n            +1\n          </div>\n          <div\n            id=\"lowfive\"\n            onClick={() => {\n              this.beatUp(5);\n            }}\n          >\n            +5\n          </div>\n          <div id=\"bpm\">{this.state.bpm}bpm</div>\n        </div>\n        <audio\n          src=\"https://freesound.org/data/previews/250/250551_4570971-lq.mp3\"\n          id=\"click\"\n        />\n        <div></div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Metronome />, document.getElementById(\"root\"));\n"],"sourceRoot":""}